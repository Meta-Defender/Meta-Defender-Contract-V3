/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MetaDefenderMarketsRegistry,
  MetaDefenderMarketsRegistryInterface,
} from "../../periphery/MetaDefenderMarketsRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "metaDefender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidityCertificate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "policy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "epochManage",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "marketName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "marketDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "marketPaymentToken",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "marketProtectionType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "network",
        type: "string",
      },
    ],
    name: "MarketAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "metaDefender",
        type: "address",
      },
    ],
    name: "MarketRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metaDefender",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidityCertificate",
        type: "address",
      },
      {
        internalType: "address",
        name: "policy",
        type: "address",
      },
      {
        internalType: "address",
        name: "epochManage",
        type: "address",
      },
      {
        internalType: "string",
        name: "marketName",
        type: "string",
      },
      {
        internalType: "string",
        name: "marketDescription",
        type: "string",
      },
      {
        internalType: "string",
        name: "marketPaymentToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "marketProtectionType",
        type: "string",
      },
      {
        internalType: "string",
        name: "network",
        type: "string",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInsuranceMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "insuranceMarketList",
        type: "address[]",
      },
    ],
    name: "getInsuranceMarketsAddressesAndMessages",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "liquidityCertificate",
            type: "address",
          },
          {
            internalType: "address",
            name: "policy",
            type: "address",
          },
          {
            internalType: "address",
            name: "epochManage",
            type: "address",
          },
        ],
        internalType: "struct IMetaDefenderMarketsRegistry.MarketAddresses[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "marketName",
            type: "string",
          },
          {
            internalType: "string",
            name: "marketDescription",
            type: "string",
          },
          {
            internalType: "string",
            name: "marketPaymentToken",
            type: "string",
          },
          {
            internalType: "string",
            name: "protectionType",
            type: "string",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
        ],
        internalType: "struct IMetaDefenderMarketsRegistry.MarketMessages[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "insuranceMarketsAddresses",
    outputs: [
      {
        internalType: "address",
        name: "liquidityCertificate",
        type: "address",
      },
      {
        internalType: "address",
        name: "policy",
        type: "address",
      },
      {
        internalType: "address",
        name: "epochManage",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "insuranceMarketsMessages",
    outputs: [
      {
        internalType: "string",
        name: "marketName",
        type: "string",
      },
      {
        internalType: "string",
        name: "marketDescription",
        type: "string",
      },
      {
        internalType: "string",
        name: "marketPaymentToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "protectionType",
        type: "string",
      },
      {
        internalType: "string",
        name: "network",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metaDefender",
        type: "address",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MetaDefenderMarketsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaDefenderMarketsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaDefenderMarketsRegistry__factory extends ContractFactory {
  constructor(...args: MetaDefenderMarketsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MetaDefenderMarketsRegistry> {
    return super.deploy(
      overrides || {}
    ) as Promise<MetaDefenderMarketsRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaDefenderMarketsRegistry {
    return super.attach(address) as MetaDefenderMarketsRegistry;
  }
  override connect(signer: Signer): MetaDefenderMarketsRegistry__factory {
    return super.connect(signer) as MetaDefenderMarketsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaDefenderMarketsRegistryInterface {
    return new utils.Interface(_abi) as MetaDefenderMarketsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaDefenderMarketsRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaDefenderMarketsRegistry;
  }
}
