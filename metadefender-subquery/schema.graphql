# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Transaction @entity {
  id: ID! # Transaction hash
  value: BigInt!

  to: String!

  from: String!

  contractAddress: String!
}

type Approval @entity {
  id: ID! # Transaction hash
  value: BigInt!

  owner: String!

  spender: String!

  contractAddress: String!
}

type LiquidityCertificate @entity {
  # account address
  id: ID!
  protocol: String!
  owner: String!
  certificateId: BigInt!
  enteredEpochIndex: BigInt!
  exitedEpochIndex: BigInt!
  rewardDebtEpochIndex: BigInt!
  liquidity: BigInt!
  SPSLocked: BigInt!
  isValid: Boolean!
}

type Market @entity {
  id: ID!
  protocol: String!
  liquidityCertificate: String!
  policy: String!
  epochManage: String!
  marketName: String!
  marketDescription: String!
  marketPaymentToken: String!
  marketProtectionType: String!
  network: String!
  isValid: Boolean!
}

type Policy @entity {
  id: ID!
  protocol: String!
  epochManage: String!
  beneficiary: String!
  policyId: BigInt!
  coverage: BigInt!
  fee: BigInt!
  timestamp: BigInt!
  duration: BigInt!
  standardRisk: BigInt!
  enteredEpochIndex: BigInt!
  SPS: BigInt!
  isClaimed: Boolean!
  isClaimApplying: Boolean!
  isSettled: Boolean!
}
